name: Test/Build Android

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable KVM group perms
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Cached Konan
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-konan-

      - name: Cache gradle
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Linter (gradle)
        run: ./gradlew spotlessCheck

      - name: Set version
        if: matrix.os == 'macOS-latest'
        run: |
          echo "ORG_GRADLE_PROJECT_VERSION_NAME=$(git describe --tags --abbrev=0 | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.)-SNAPSHOT" >> $GITHUB_ENV

      - name: Check JVM
        if: matrix.os != 'windows-latest'
        run: ./gradlew jvmTest

      - name: Check JVM (Windows)
        if: matrix.os == 'windows-latest'
        run: ./gradlew jvmTest

      - name: Check Linux
        if: matrix.os == 'ubuntu-latest'
        run: ./gradlew linuxX64Test

      - name: Check iOS
        if: matrix.os == 'macOS-latest'
        run: ./gradlew iosX64Test

#      - name: Check Android
#        if: matrix.os == 'ubuntu-latest'
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 34
#          script: ./gradlew connectedCheck

#      - name: Android Test Report
#        uses: asadmansr/android-test-report-action@v1.2.0
#        if: matrix.os == 'ubuntu-latest'

      - name: Build (gradle)
        run: ./gradlew assemble --no-daemon

      - uses: gradle/actions/setup-gradle@v4

#      - name: Publish
#        if: matrix.os == 'macOS-latest'
#        run: ./gradlew publishToMavenCentral --no-configuration-cache
#        env:
#          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
#          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
#          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_PRIVATE_KEY }}
#          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}


